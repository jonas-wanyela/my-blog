{"version":3,"sources":["pages/HomePage.js","pages/Article-content.js","components/ArticleList.js","pages/ArticleListPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/ArticlePage.js","pages/AboutPage.js","navbar.js","pages/404Page.js","App.js","index.js"],"names":["HomePage","articles","name","title","content","ArticleList","className","map","article","key","to","substring","ArticleListPage","ArticleContent","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","onClick","AddCommentForm","setAarticleInfo","useState","setUsername","commentText","setCommenttext","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","results","console","log","otherArticles","filter","paragraph","AboutPage","NavBar","P404","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19618267.chunk.js","sourcesContent":["// import React from \"react\";\r\n\r\nfunction HomePage(){\r\n  return <div>\r\n    <h1>Hello, welcome to my blog!</h1>\r\n    <p>\r\n      The 'prompt' box is created using JavaScript's built-in prompt() function.\r\n      When the JavaScript prompt() function is triggered, a small box will pop\r\n      up and display a message to the user (supplied by you), a text field (for\r\n      the user's input), an \"OK\" button, and a \"Cancel\" button\r\n    </p>\r\n    <p>\r\n      The JavaScript alert box is useful for alerting your users to something\r\n      important. When a JavaScript alert box is triggered, a small box will pop\r\n      up and display the text that you specify in your JavaScript code. You\r\n      create a JavaScript alert box by calling the built-in JavaScript alert()\r\n      function.\r\n    </p>\r\n    <p>\r\n      The JavaScript confirm () method displays a specified message in a dialog\r\n      box, containing OK and CANCEL buttons. A confirm box is used to accept or\r\n      verify something. The confirm JavaScript box forces the browser to read\r\n      the message. By doing so, it takes the focus off the current window.\r\n    </p>\r\n  </div>\r\n}\r\nexport default HomePage;","const articles = [\n    {\n        name: 'learn-react',\n        title: 'The Fastest Way to Learn React',\n        content: [\n            `Welcome! Today we're going to be talking about the fastest way to\n            learn React. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },    {\n        name: 'learn-node',\n        title: 'How to Build a Node Server in 10 Minutes',\n        content: [\n            `In this article, we're going to be talking looking at a very quick way\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },     {\n        name: 'my-thoughts-on-resumes',\n        title: 'My Thoughts on Resumes',\n        content: [\n            `Today is the day I talk about something which scares most people: resumes.\n            In reality, I'm not sure why people have such a hard time with proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },  \n];\n\nexport default articles;","import { Link } from \"react-router-dom\";\r\n\r\nfunction ArticleList({ articles }) {\r\n  return (\r\n    <ul>\r\n      <li>\r\n        <div className=\"article\">\r\n          {articles.map((article, key) => (\r\n            <Link key={key} to={`/article/${article.name}`}>\r\n              <h3 className=\"\">{article.title}</h3>\r\n              <p>{article.content[0].substring(0, 150)}.....</p>\r\n            </Link>\r\n          ))}\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\nexport default ArticleList;\r\n","// import React from \"react\";\r\nimport ArticleContent from \"./Article-content\";\r\nimport ArticleList from \"../components/ArticleList\";\r\n\r\nfunction ArticleListPage() {\r\n  return (\r\n    <div>\r\n      <h1>Article lists!</h1>\r\n      <ArticleList articles={ArticleContent} />\r\n    </div>\r\n  );\r\n}\r\nexport default ArticleListPage;\r\n","function CommentsList({ comments }) {\r\n  return (\r\n    <div>\r\n      <h3>Comments:</h3>\r\n      {comments.map((comment, key) => (\r\n        <div className=\"card\" key={key}>\r\n          <h4>{comment.username}</h4>\r\n          <p>{comment.text}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommentsList;\r\n","function UpvotesSection({ articleName, upvotes, setArticleInfo }) {\r\n  const upvoteArticle = async () => {\r\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n      method: \"post\",\r\n    });\r\n    const body = await result.json();\r\n    setArticleInfo(body);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <button onClick={() => upvoteArticle()} className=\"btn\">\r\n        Add Upvote\r\n      </button>\r\n      <p>This article has been votes {upvotes} times</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpvotesSection;\r\n","import { useState } from \"react\";\r\n\r\nfunction AddCommentForm({ articleName, setAarticleInfo }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [commentText, setCommenttext] = useState(\"\");\r\n\r\n  const addComment = async () => {\r\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n      method: \"post\",\r\n      body: JSON.stringify({ username, text: commentText }),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    const body = await result.json();\r\n    setAarticleInfo(body);\r\n    setCommenttext(\"\");\r\n    setUsername(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>Add a Comment:</h3>\r\n      <label>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(event) => setUsername(event.target.value)}\r\n        />\r\n      </label>\r\n      <label>\r\n        Comment:\r\n        <textarea\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          value={commentText}\r\n          onChange={(event) => setCommenttext(event.target.value)}\r\n        />\r\n      </label>\r\n      <button onClick={() => addComment()}>Add Comment</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCommentForm;\r\n","// import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport ArticleContent from \"./Article-content\";\r\nimport ArticleList from \"../components/ArticleList\";\r\nimport CommentsList from \"../components/CommentsList\";\r\nimport UpvotesSection from \"../components/UpvotesSection\";\r\nimport AddCommentForm from \"../components/AddCommentForm\";\r\n\r\nfunction ArticlePage({ match }) {\r\n  const name = match.params.name;\r\n  const article = ArticleContent.find((article) => article.name === name);\r\n\r\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const results = await fetch(`/api/articles/${name}`);\r\n      const body = await results.json();\r\n      console.log(body);\r\n      setArticleInfo(body);\r\n    };\r\n    fetchData();\r\n  }, [name]);\r\n\r\n  if (!article) return <h1>Article does not exist!</h1>;\r\n\r\n  const otherArticles = ArticleContent.filter(\r\n    (article) => article.name !== name\r\n  );\r\n  return (\r\n    <div className=\"article\">\r\n      {/* <h1>This is an Article!</h1> */}\r\n      {/* <h3>Ths is the {name} Article </h3> */}\r\n      <h1>{article.title}</h1>\r\n      {/* <p>{article.content}</p> */}\r\n      <UpvotesSection\r\n        articleName={name}\r\n        upvotes={articleInfo.upvotes}\r\n        setArticleInfo={setArticleInfo}\r\n      />\r\n      {article.content.map((paragraph, key) => (\r\n        <p key={key}>{paragraph}</p>\r\n      ))}\r\n      <CommentsList comments={articleInfo.comments} />\r\n      <AddCommentForm articleName={name} setAarticleInfo={setArticleInfo} />\r\n      <h3>Other Realated Articles:</h3>\r\n      <ArticleList articles={otherArticles} />\r\n    </div>\r\n  );\r\n}\r\nexport default ArticlePage;\r\n","// import React from \"react\";\r\n\r\nfunction AboutPage() {\r\n  return (\r\n    <div>\r\n      <h1>About me!</h1>\r\n      <p>\r\n        The 'prompt' box is created using JavaScript's built-in prompt()\r\n        function. When the JavaScript prompt() function is triggered, a small\r\n        box will pop up and display a message to the user (supplied by you), a\r\n        text field (for the user's input), an \"OK\" button, and a \"Cancel\" button\r\n      </p>\r\n      <p>\r\n        The JavaScript alert box is useful for alerting your users to something\r\n        important. When a JavaScript alert box is triggered, a small box will\r\n        pop up and display the text that you specify in your JavaScript code.\r\n        You create a JavaScript alert box by calling the built-in JavaScript\r\n        alert() function.\r\n      </p>\r\n      <p>\r\n        The JavaScript confirm () method displays a specified message in a\r\n        dialog box, containing OK and CANCEL buttons. A confirm box is used to\r\n        accept or verify something. The confirm JavaScript box forces the\r\n        browser to read the message. By doing so, it takes the focus off the\r\n        current window.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\nexport default AboutPage;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/article-list\">Articles</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      ;\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","function P404() {\r\n  return <h1>404: Page Not Found</h1>;\r\n}\r\nexport default P404;\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import Route from 'react';\n\nimport HomePage from \"./pages/HomePage\";\nimport ArticleListPage from \"./pages/ArticleListPage\";\nimport ArticlePage from \"./pages/ArticlePage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport NavBar from \"./navbar\";\nimport P404 from \"./pages/404Page\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" component={HomePage} exact />\n          <Route path=\"/about\" component={AboutPage} />\n          <Route path=\"/article-list\" component={ArticleListPage} />\n          <Route path=\"/article/:name\" component={ArticlePage} />\n          <Route component={P404} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\"\nimport App from \"./App\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}